- name: Install nginx
  apt: pkg=nginx,python-passlib state=installed update_cache=true

- name: Creates media directory
  file: path={{ root_dir }}/media state=directory

- name: Creates static directory
  file: path={{ root_dir }}/static state=directory

- name: Copy nginx configuration file (non-ssl)
  template: src=nginx-site-default dest=/etc/nginx/sites-available/default
  when: not ssl
  notify: restart nginx

- name: Copy nginx configuration file (ssl)
  template: src=nginx-site-default-ssl dest=/etc/nginx/sites-available/default
  when: ssl
  notify: restart nginx

- name: Create basic auth user file
  htpasswd: path=/etc/nginx/htpasswd name={{ basic_auth_user }} password={{ basic_auth_password }} owner=root group=www-data mode=0640
  when: basic_auth

- name: Create Firewall rule for port 80
  ufw: rule=allow port={{ webserver_port }} proto=tcp

- name: Create Firewall rule for port 443
  ufw: rule=allow port=443 proto=tcp
  when: ssl

# SSL
- name: Install Let's Encrypt
  apt: pkg=letsencrypt update_cache=true
  when: ssl

- name: Create Let's Encrypt directory
  file: path=/tmp/letsencrypt state=directory
  when: ssl

- name: Generate dhparam file
  command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048 creates=/etc/ssl/certs/dhparam.pem
  notify: restart nginx
  when: ssl

- name: Generate initial certificate
  command: bash -c "systemctl stop nginx; letsencrypt certonly --standalone -d {{ domain }} {% if use_www %}-d www.{{ domain }}{% endif %} -m {{ letsencrypt_email }} --agree-tos; systemctl start nginx" creates=/etc/letsencrypt
  notify: restart nginx
  when: ssl

- name: Create scripts directory
  file: path={{ root_dir }}/scripts state=directory
  when: ssl

- name: Create renew cronjob script
  template: src=update-certs.sh dest={{ root_dir }}/scripts/update-certs.sh
  when: ssl

- name: Install renew cronjob
  cron: name="update letsencrypt certificates" minute="0" hour="0" weekday="1" job="/srv/{{ project_name }}/update-certs.sh > /dev/null"
  when: ssl
